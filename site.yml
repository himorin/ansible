---
- hosts: all
  vars_files:
    - "group_vars/site_{{ ansible_domain }}.yml"
  roles:
    - system-accounts
    - role: packages
      packages: "{{ site_config.packages.sitewide }}"
    - cron-apt
    - role: ntp-client
      when: "server_ntp is undefined"
    - role: exim4
      when: "server_smarthost is undefined"
    - role: rsyslog-client
      when: "server_rsyslog is undefined"

- hosts: external
  vars_files:
    - "group_vars/site_{{ ansible_domain }}.yml"
  roles:
    - ssh-gateway

- hosts: dbsrv
  vars_files:
    - "group_vars/site_{{ ansible_domain }}.yml"
  roles:
    - role: mount
      when: "local_uuids is defined"
    - role: pgsql-server
      when: "pgsql_server is defined"
    - role: mysql-server
      when: "mysql_server is defined"

- hosts: prometheus-exporters
  vars_files:
    - "group_vars/site_{{ ansible_domain }}.yml"
  vars_prompt:
    - name: "prometheus_exporters_mysql_account"
      prompt: "(prometheus_exporters_mysql_account)\nEnter account information for mysql in \"<account>:<password>\" format\n  need 'select' and 'replication client' priv on *.*\n  just type enter when you don't configure"
      private: yes
    - name: "prometheus_exporters_pgsql_account"
      prompt: "prometheus_exporters_pgsql_account)\nEnter account information for pgsql in \"<account>:<password>\" format\n  need connection priv on postgres\n  just type enter when you don't configure"
      private: yes
  roles:
    - prometheus-exporters

- hosts: server
  vars_files:
    - "group_vars/site_{{ ansible_domain }}.yml"
  roles:
    - { role: ntp-server, when: "server_ntp is defined" }
    - { role: rsyslog-server, when: "server_rsyslog is defined" }
    - { role: ldap-server, when: "server_ldap is defined" }
    - { role: dnsmasq, when: "server_dnsmasq is defined" }
    - { role: prometheus, when: "server_prometheus is defined" }
    - { role: grafana, when: "server_grafana is defined" }
    - { role: apache, when: "server_apache is defined" }
    - { role: certbot, when: "server_apache is defined or server_nginx is defined" }
    - { role: couchdb, when: "server_couchdb is defined" }

- hosts: works
  vars_files:
    - "group_vars/site_{{ ansible_domain }}.yml"
  roles:
    - ldap-client
    - role: nodejs
      when: "install_nodejs is defined"
    - role: nfs-client
      when: "nfsv3_target is defined"

- hosts: samba
  vars_files:
    - "group_vars/site_{{ ansible_domain }}.yml"
  roles:
    - ldap-client
    - role: nfs-client
      when: "nfsv3_target is defined"
    - samba-server




- hosts: alls
  vars_files:
    - "group_vars/site_{{ ansible_domain }}.yml"
  roles:
    - iptables


- hosts: virt-host
  vars_files:
    - "group_vars/site_{{ ansible_domain }}.yml"
  roles:
    - virt-server
- hosts: virt-client
  vars_files:
    - "group_vars/site_{{ ansible_domain }}.yml"
  roles:
    - virt-client

- hosts: privca
  vars_files:
    - "group_vars/site_{{ ansible_domain }}.yml"
  roles:
    - privca

- hosts: hwraid
  vars_files:
    - "group_vars/site_{{ ansible_domain }}.yml"
  roles:
    - hwraid
- hosts: fc-nfs
  vars_files:
    - "group_vars/site_{{ ansible_domain }}.yml"
  roles:
    - iscsi
    - nfs-server
- hosts: landfill
  vars_files:
    - "group_vars/site_{{ ansible_domain }}.yml"
  roles:
    - boot-aptupdate
    - serial-console
    - { role: packages, packages: "{{ host_packages }}" }

- hosts: jupyter
  vars_files:
    - "group_vars/site_{{ ansible_domain }}.yml"
  roles:
    - jupyter

